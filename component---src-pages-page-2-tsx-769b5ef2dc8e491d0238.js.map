{"version":3,"sources":["webpack:///./src/pages/page-2.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Container.tsx","webpack:///./src/components/Page.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/social-share.jpg","webpack:///./src/styles/normalize.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["__webpack_exports__","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","colors","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","fonts","sansSerif","serif","monospace","breakpoints","xs","sm","md","lg","xl","widths","dimensions","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","object","string","isRequired","func","getEmSize","size","_variables__WEBPACK_IMPORTED_MODULE_0__","m","module","exports","__webpack_require__","default","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","_styles_mixins__WEBPACK_IMPORTED_MODULE_4__","_styles_variables__WEBPACK_IMPORTED_MODULE_3__","_ref","id","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledPage","name","styles","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","createElement","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","assign","json","shape","p","normalize","variables","mixins","StyledLayoutRoot","styled_base_browser_esm","components_LayoutRoot","core_browser_esm","react","StyledLayoutMain","components_LayoutMain","gatsby_browser_entry","_ref2","_ref2$site$siteMetada","site","siteMetadata","title","description","siteUrl","twitter","Helmet_default","meta","content","lang","property","social_share_default","_1192916189"],"mappings":"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","file":"component---src-pages-page-2-tsx-769b5ef2dc8e491d0238.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\nconst PageTwo = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Hi from the second page</h1>\n        <p>Welcome to page 2</p>\n        <ul>\n          <li>\n            <Link to=\"/a-markdown-page/\">Show me some Markdown!</Link>\n          </li>\n          <li>\n            <Link to=\"/\">Take me back home.</Link>\n          </li>\n        </ul>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTwo\n","/* tslint:disable:max-line-length */\n\nexport const colors = {\n  brand: 'rgba(115, 202, 136, .9)',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: 'rgba(0, 0, 0, 0.8)'\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 90\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n  id?: string\n}\n\nconst Container: React.SFC<ContainerProps> = ({ id, children, className }) => (\n  <StyledContainer id={id} className={className}>\n    {children}\n  </StyledContainer>\n)\n\nexport default Container\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"d6e4b27564854722e560312287e8b0d1.jpg\";","import { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n    border-bottom-style: dotted;\n\n    &:hover,\n    &:focus {\n      border-bottom-style: solid;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    // color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport normalize from '../styles/normalize'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport socialMediaImage from '../assets/social-share.jpg'\n\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ntype StaticQueryProps = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n    }\n  }\n}\n\nconst IndexLayout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            siteUrl\n            twitter\n          }\n        }\n      }\n    `}\n    render={({\n      site: {\n        siteMetadata: { title, description, siteUrl, twitter }\n      }\n    }) => (\n      <LayoutRoot>\n        <Helmet\n          title={title}\n          meta={[\n            { name: 'description', content: description },\n            { name: 'keywords', content: 'uncodeference, unconference, wattens, werkstätte, conference, software engineering' }\n          ]}\n        >\n          <html lang=\"en\" />\n          <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\" />\n\n          <meta property=\"og:url\" content={siteUrl} />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:locale\" content=\"en\" />\n          <meta property=\"og:site_name\" content={title} />\n          <meta property=\"og:image\" content={socialMediaImage} />\n\n          <meta name=\"twitter:card\" content=\"summary\" />\n          <meta name=\"twitter:site\" content={twitter} />\n          <meta name=\"twitter:description\" content={description} />\n          <meta name=\"twitter:image\" content={socialMediaImage} />\n        </Helmet>\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}